{% extends 'base.html.twig' %}

{% block title %}Modifier mes prestations
{% endblock %}

{% block body %}
	{{ form_start(addPresta) }}
	<br>
	<br>
	<div class="container">
		<div class="mb-5 p-2 widget px-5">
			<div class="row mt-3 ml-0 mb-4">
                <h4>Modifier la prestation</h4>
            </div>
			<div class="row">
				<div class="col-lg-6 col-12">
					{{ form_row(addPresta.name, {'attr': {'class': 'form-control'}}) }}
				</div>
				<div class="col-lg-6 col-12">
					{{ form_row(addPresta.category, {'attr': {'class': 'form-control'}}) }}
				</div>
				<div class="col-lg-6 col-12">
					{{ form_row(addPresta.price, {'attr': {'class': 'form-control'}}) }}
				</div>

				<div class="col-lg-6 col-12">
					{{ form_row(addPresta.prestaTime, {'attr': {'class': 'form-control'}}) }}
				</div>
			</div>

			<div class="row">
				{# <div class="col-lg-6 col-12">
					{{ form_row(addPresta.image, {'attr': {'class': 'form-control'}}) }}
					<p>
						<i id="nameFile"></i>
					</p>
				</div> #}

				<div class="custom-file-container col-12" data-upload-id="myFirstImage">
					<label class="labelUpload">Télécharger  <a href="javascript:void(0)" class="custom-file-container__image-clear" title="Clear Image">x</a></label>
					<label class="custom-file-container__custom-file" >
						{{ form_row(addPresta.image, {'attr': {'class': 'custom-file-container__custom-file__custom-file-input', 'accept': 'image/*'}}) }} 
						{# <input type="file" class="custom-file-container__custom-file__custom-file-input" accept="image/*"> #}
						<input type="hidden" name="MAX_FILE_SIZE" value="10485760" />
						<span class="custom-file-container__custom-file__custom-file-control"></span>
					</label>
					<div class="custom-file-container__image-preview"></div>
				</div>
	
				{{ form_row(addPresta.agendaColor, {'attr': {'class': 'form-control'}}) }}
			
			</div>

			<div class="row mt-2 mb-4">

					<div class="col-lg-5 col-12 d-flex justify-content-around align-items-start  rounded px-3 pt-3" style="padding-right:15px;">
						<div class="d-flex flex-column">
							<h6 class="w-100">Selectionner votre couleur</h6>
							<div id="boxColor" class="boxColor"></div>
							<p class="mt-2"><b id="hexaText"></b></p>
							<p><b id="rgbText"></b></p>
						</div>
						<div id="picker" class="col-4"></div>
					</div>

				</div>

			<div class="row">

				<div class="col-12">
					<div class="btn btn-outline btn-primary mb-3" id="addBreakTimeBtn">Ajouter un temps de pause</div>
				</div>

				<div id="breaktime" style="display:none;" class="col-lg-6 col-12">
					{{ form_row(addPresta.breakTime, {'attr': {'class': 'form-control'}}) }}
				</div>

				<div id="prestaTime2" style="display:none;" class="col-lg-6 col-12">
					{{ form_row(addPresta.prestaTime2, {'attr': {'class': 'form-control'}}) }}
				</div>

			</div>

			<div class="col-3 mb-3 pl-0">
				<button type="submit" class="btn btn-warning">Modifier</button>
			</div>
			<br>
		</div>
	</div>
	{{ form_end(addPresta) }}
{% endblock %}

{% block javascripts %}

	<script>

		document.getElementById('titlePage').innerHTML = "Modifier mes prestations";

		var firstUpload = new FileUploadWithPreview('myFirstImage');

		$("input[name='add_prestation[prestaTime]']").TouchSpin({
			buttondown_class: "btn btn-classic btn-warning",
			buttonup_class: "btn btn-classic btn-secondary",
			max: 10000,
			postfix: 'min'
		});
		$("input[name='add_prestation[price]']").TouchSpin({
			buttondown_class: "btn btn-classic btn-warning",
			buttonup_class: "btn btn-classic btn-secondary",
			max: 10000,
			postfix: '€'
		});
		$("input[name='add_prestation[breakTime]']").TouchSpin({
			buttondown_class: "btn btn-classic btn-warning",
			buttonup_class: "btn btn-classic btn-secondary",
			max: 10000,
			postfix: 'min'
		});
		$("input[name='add_prestation[prestaTime2]']").TouchSpin({
			buttondown_class: "btn btn-classic btn-warning",
			buttonup_class: "btn btn-classic btn-secondary",
			max: 10000,
			postfix: 'min'
		});
		
		window.onload = () => {
			var width = 100;
                if (window.matchMedia("(max-width: 600px)").matches) {
                    width = 60;
                    /* La largeur minimum de l'affichage est 600 px inclus */
                } else {
                    /* L'affichage est inférieur à 600px de large */
                }
			var colorPicker = new iro.ColorPicker("#picker", {
				// Set the size of the color picker
				width: width,
				// Set the initial color to pure red
				color: document.getElementById('add_prestation_agendaColor').value
				
			});

			colorPicker.on(['color:init', 'color:change'], function(color) {
				// log the current color as a HEX string
				console.log(color.hexString);
				document.getElementById('boxColor').style.backgroundColor = color.hexString;
				document.getElementById('add_prestation_agendaColor').value = color.hexString;
				document.getElementById('hexaText').innerHTML = color.hexString;
				document.getElementById('rgbText').innerHTML = color.rgbString;
			});
		}

		document.getElementById('addBreakTimeBtn').addEventListener('click', function () {
		document.getElementById('breaktime').style = "display:block;";
		document.getElementById('prestaTime2').style = "display:block;";
		document.getElementById('addBreakTimeBtn').style = "display:none;";
		})


		document.getElementById('add_prestation_image').addEventListener('input', function (evt) {

		document.getElementById('nameFile').innerHTML = this.value;

		var label = document.getElementsByClassName('custom-file-label');
		for (var i = 0; i < label.length; i++) {
		label[i].style.border = '2px solid green';
		}

		});
	</script>
{% endblock javascripts %}

{% block stylesheets %}
	<style>
		.custom-file{
			display: none;
		}
		span.custom-file-container__custom-file__custom-file-control{
			color: rgb(169, 120, 28) !important;
		}
		span.custom-file-container__custom-file__custom-file-control__button{
			color: rgb(169, 120, 28) !important;
		}
		.labelUpload{
			color: rgb(169, 120, 28) !important;
		}
		.invalid-feedback{
			margin-top: 30px;
		}
		.sidenav .sidenav-content a{
			color: rgb(169, 120, 28) !important;
		}
		.sidenav .sidenav-content a.active, .sidenav .sidenav-content a:hover{
			color: rgb(169, 120, 28) !important;
			font-weight: 700;
			border-left: 1px solid rgb(169, 120, 28) !important;
		}
		input::-webkit-outer-spin-button,
		input::-webkit-inner-spin-button {
		-webkit-appearance: none;
		margin: 0;
		}
	</style>
{% endblock %}
